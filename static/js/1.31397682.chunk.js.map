{"version":3,"file":"static/js/1.31397682.chunk.js","mappings":"yQAGaA,EAAqBC,EAAAA,EAAAA,IAAH,0CAIlBC,GAAiBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,oRAedG,EAAiBH,EAAAA,EAAAA,GAAH,yKAUdI,EAAQJ,EAAAA,EAAAA,KAAH,+CAILK,EAAQL,EAAAA,EAAAA,GAAH,8C,SClCLM,EAAsBN,EAAAA,GAAAA,IAAH,sHAOnBO,EAASP,EAAAA,GAAAA,IAAH,8HAMNQ,EAAYR,EAAAA,GAAAA,GAAH,gDAITS,EAAYT,EAAAA,GAAAA,EAAH,gDAITU,EAAgBV,EAAAA,GAAAA,GAAH,gDAIbW,EAAWX,EAAAA,GAAAA,EAAH,gDAIRY,EAAcZ,EAAAA,GAAAA,GAAH,gD,SCnBXa,EAAgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAa9D,OACE,UAACZ,EAAD,YACE,0BACE,SAACC,EAAD,CAAQY,IAAKL,EAAQM,IAAKL,EAAOM,MAAM,MAAMC,OAAO,WAEtD,4BACE,SAACd,EAAD,UAAYO,KACZ,UAACN,EAAD,0BAAwBO,EAAxB,QACA,SAACN,EAAD,wBACA,SAACC,EAAD,UAAWM,KACX,SAACL,EAAD,sBACA,uBAAIM,SAIX,ECwED,EA7FqB,WAAO,IAAD,IACzB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAyBzC,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,UAVJ,gCAUI,iBAAsBP,EAAtB,oBATJ,mCASI,mBAGdQ,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJb,EAAS,CACPX,OAAO,mCAAD,OAAqCwB,EAAKC,aAChDxB,MAAOuB,EAAKvB,MACZC,MAAOwB,OAAOC,SAA6B,GAApBH,EAAKI,cAC5BzB,SAAUqB,EAAKrB,SACfC,OAAQoB,EAAKpB,OACVyB,QAAO,SAACC,EAAKC,GAAN,OAAiBD,GAAOC,EAAMC,KAAO,IAArC,GAA2C,IAClDC,QAEN,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIjB,GAAE,CAACvB,KAGF,2BACE,UAAC3B,EAAD,YACE,UAACE,EAAD,CAAgBmD,GAAIxB,EAApB,WACE,SAACxB,EAAD,WACE,SAAC,MAAD,CAAkBiD,KAAM,OAF5B,cAOA,SAACxC,EAAD,CACEC,OAAQU,EAAMV,OACdC,MAAOS,EAAMT,MACbC,MAAOQ,EAAMR,MACbC,SAAUO,EAAMP,SAChBC,OAAQM,EAAMN,UAGhB,SAACb,EAAD,sCACA,UAACF,EAAD,YACE,yBACE,SAAC,KAAD,CAAMiD,GAAG,OAAOtB,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMwB,GAAG,UAAUtB,MAAO,CAAEC,KAAMH,GAAlC,2BAMJ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/MovieDetalies/MovieDetalies.styled.jsx","components/MovieMainInfo/MovieMainInfo.styled.jsx","components/MovieMainInfo/MovieMainInfo.jsx","components/MovieDetalies/MovieDetalies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsStyled = styled.div`\n  padding: 40px;\n`;\n\nexport const BackLinkStyled = styled(Link)`\n  display: inline-block;\n  padding: 3px 10px;\n  margin-bottom: 10px;\n  border: 1px solid #a8a8ee;\n  border-radius: 10px;\n  color: #000000;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: #ffffff;\n    background-color: #a8a8ee;\n  }\n`;\n\nexport const AdditionalInfo = styled.ul`\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 2px solid #ccc8c8;\n  a {\n    display: block;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Arrow = styled.span`\n  margin-right: 16px;\n`;\n\nexport const Titel = styled.h2`\n  margin: 12px 16px;\n`;","import styled from 'styled-components';\n\nexport const MovieMainInfoStyled = styled.div`\n  display: flex;\n  gap: 16px;\n  padding-bottom: 12px;\n  border-bottom: 2px solid #ccc8c8;\n`;\n\nexport const Poster = styled.img`\n  border: 2px solid #fff;\n  border-radius: 14px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const TitleMain = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const TitleOverview = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const TitleGenres = styled.h3`\n  margin-bottom: 15px;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  MovieMainInfoStyled,\n  Poster,\n  TitleMain,\n  UserScore,\n  TitleOverview,\n  Overview,\n  TitleGenres,\n} from './MovieMainInfo.styled';\n\nexport const MovieMainInfo = ({ poster, title, score, overview, genres }) => {\n  //   console.log(poster);\n  //   console.log(title);\n  // const noPosterAvaliable =\n  //   'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n  // function fetchFilmPhoto(poster) {\n  //   const noPosterAvaliable = defaultPoster;\n\n  //   return poster\n  //     ? `https://image.tmdb.org/t/p/w500${poster}`\n  //     : noPosterAvaliable;\n  // }\n\n  return (\n    <MovieMainInfoStyled>\n      <div>\n        <Poster src={poster} alt={title} width=\"240\" height=\"320\" />\n      </div>\n      <div>\n        <TitleMain>{title}</TitleMain>\n        <UserScore>User Score: {score}%</UserScore>\n        <TitleOverview>Overview</TitleOverview>\n        <Overview>{overview}</Overview>\n        <TitleGenres>Genres</TitleGenres>\n        <p>{genres}</p>\n      </div>\n    </MovieMainInfoStyled>\n  );\n};\n\nMovieMainInfo.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string,\n  score: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.string,\n};","import PropTypes from 'prop-types';\nimport { Outlet, useLocation, useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { HiArrowUturnLeft } from 'react-icons/hi2';\n// import defaultPoster from '../../images/noposter.jpg';\nimport {\n  MovieDetailsStyled,\n  BackLinkStyled,\n  AdditionalInfo,\n  Arrow,\n  Titel,\n} from './MovieDetalies.styled';\n\nimport { MovieMainInfo } from 'components/MovieMainInfo/MovieMainInfo';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9ee5d4a207d60b7c3d8d62795d8824d4';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const urlDetails = `${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n    function fetchMovie() {\n      fetch(urlDetails)\n        .then(response => response.json())\n        .then(data => {\n          setMovie({\n            poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\n            title: data.title,\n            score: Number.parseInt(data.vote_average * 10),\n            overview: data.overview,\n            genres: data.genres\n              .reduce((acc, genre) => (acc += genre.name + ' '), '')\n              .trim(),\n          });\n        })\n        .catch(error => console.log(error));\n    }\n\n    fetchMovie();\n  }, [id]);\n\n  return (\n    <main>\n      <MovieDetailsStyled>\n        <BackLinkStyled to={backLink}>\n          <Arrow>\n            <HiArrowUturnLeft size={12} />\n          </Arrow>\n          Go back\n        </BackLinkStyled>\n\n        <MovieMainInfo\n          poster={movie.poster}\n          title={movie.title}\n          score={movie.score}\n          overview={movie.overview}\n          genres={movie.genres}\n        />\n\n        <Titel>Additional information</Titel>\n        <AdditionalInfo>\n          <li>\n            <Link to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLink }}>\n              Reviews\n            </Link>\n          </li>\n        </AdditionalInfo>\n\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </MovieDetailsStyled>\n    </main>\n  );\n};\n\nMovieDetails.propTypes = {\n  details: PropTypes.arrayOf(\n    PropTypes.exact({\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n      popularity: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.exact({\n          name: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ),\n  backLinkHref: PropTypes.string,\n  additionalInfo: PropTypes.arrayOf(\n    PropTypes.exact({\n      href: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n  path: PropTypes.string,\n};\n\nexport default MovieDetails;"],"names":["MovieDetailsStyled","styled","BackLinkStyled","Link","AdditionalInfo","Arrow","Titel","MovieMainInfoStyled","Poster","TitleMain","UserScore","TitleOverview","Overview","TitleGenres","MovieMainInfo","poster","title","score","overview","genres","src","alt","width","height","useState","movie","setMovie","id","useParams","backLink","useLocation","state","from","useEffect","urlDetails","fetch","then","response","json","data","poster_path","Number","parseInt","vote_average","reduce","acc","genre","name","trim","catch","error","console","log","to","size","Suspense","fallback"],"sourceRoot":""}