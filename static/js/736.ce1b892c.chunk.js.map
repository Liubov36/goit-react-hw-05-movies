{"version":3,"file":"static/js/736.ce1b892c.chunk.js","mappings":"gPAEaA,EAAaC,EAAAA,EAAAA,GAAH,qJASVC,EAAiBD,EAAAA,EAAAA,GAAH,2IAUdE,EAAQF,EAAAA,EAAAA,IAAH,sKAQLG,EAAUH,EAAAA,EAAAA,IAAH,yCAGPI,EAAYJ,EAAAA,EAAAA,GAAH,mEAKTK,EAAYL,EAAAA,EAAAA,KAAH,8C,SCmCtB,EApDa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GA2BR,OAzBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,UAZD,gCAYC,iBAAsBH,EAAtB,4BAXD,mCAWC,mBAGXI,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJT,EACES,EAAKC,KAAKC,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,MAAO,CACLC,OAAQH,EAAY,0CACmBA,GAnBrD,+EAqBcC,KAAMA,EACNC,UAAWA,EAEd,IAEJ,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIjB,GAAE,CAAChB,KAGF,SAACV,EAAD,UACGQ,EAAOY,KAAI,YAAkC,IAA/BI,EAA8B,EAA9BA,OAAQF,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC3B,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CAAO0B,IAAKL,EAAQM,IAAKR,EAAMS,MAAM,MAAMC,OAAO,SAClD,UAAC5B,EAAD,YACE,SAACC,EAAD,UAAYiB,KACZ,0BACE,SAAChB,EAAD,yBADF,IACqCiB,UALpBD,EAUxB,KAGN,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const CastItemStyled = styled.li`\n  flex-basis: calc(12% - 30px);\n  :not(:last-child) {\n    margin-bottom: 30px;\n  }\n  p {\n    margin: 0;\n  }\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  margin-bottom: 14px;\n  border: 2px solid #fff;\n  border-radius: 14px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const InfoBox = styled.div`\n  flex-grow: 1;\n`;\nexport const ActorName = styled.h2`\n  font-size: 14px;\n  margin-bottom: 6px;\n`;\n\nexport const Character = styled.span`\n  font-weight: bold;\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CastStyled,\n  CastItemStyled,\n  Photo,\n  ActorName,\n  Character,\n  InfoBox,\n} from './Cast.styled';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9ee5d4a207d60b7c3d8d62795d8824d4';\nconst placeHolder =\n  'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\n// const placeHolder =\n//   'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const urlCast = `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n\n    function fetchActors() {\n      fetch(urlCast)\n        .then(response => response.json())\n        .then(data => {\n          setActors(\n            data.cast.map(({ profile_path, name, character }) => {\n              return {\n                poster: profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : placeHolder,\n                name: name,\n                character: character,\n              };\n            })\n          );\n        })\n        .catch(error => console.log(error));\n    }\n\n    fetchActors();\n  }, [id]);\n\n  return (\n    <CastStyled>\n      {actors.map(({ poster, name, character }) => {\n        return (\n          <CastItemStyled key={name}>\n            <Photo src={poster} alt={name} width=\"180\" height=\"240\" />\n            <InfoBox>\n              <ActorName>{name}</ActorName>\n              <p>\n                <Character>Character:</Character> {character}\n              </p>\n            </InfoBox>\n          </CastItemStyled>\n        );\n      })}\n    </CastStyled>\n  );\n};\n\nCast.propTypes = {\n  actors: PropTypes.string,\n};\n\nexport default Cast;"],"names":["CastStyled","styled","CastItemStyled","Photo","InfoBox","ActorName","Character","useState","actors","setActors","id","useParams","useEffect","urlCast","fetch","then","response","json","data","cast","map","profile_path","name","character","poster","catch","error","console","log","src","alt","width","height"],"sourceRoot":""}