{"version":3,"file":"static/js/387.4d137c01.chunk.js","mappings":"wOAEaA,EAAgBC,EAAAA,EAAAA,GAAH,sBAEbC,EAAoBD,EAAAA,EAAAA,GAAH,6F,SCyD9B,EArDgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,UARJ,gCAQI,iBAAsBH,EAAtB,4BAPJ,mCAOI,mBAGdI,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJT,EACES,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAAnB,MAAkC,CACjDC,OAAQF,EAAeG,SACvBF,QAASA,EAFM,IAKpB,IACAG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIjB,GAAE,CAAChB,KAGF,8BACGF,EAAQqB,OAAS,GAChB,SAACzB,EAAD,UACGI,EAAQY,KAAI,WAAsBU,GAAW,IAA9BP,EAA6B,EAA7BA,OAAQD,EAAqB,EAArBA,QACtB,OACE,UAAChB,EAAD,YACE,qCAAaiB,MACb,uBAAID,MAFkBQ,EAK3B,OAGH,uFAIP,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsStyled = styled.ul``;\n\nexport const ReviewsItemStyled = styled.li`\n  h2 {\n    font-size: 16px;\n  }\n  p {\n    font-size: 12px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsStyled, ReviewsItemStyled } from './Reviews.styled';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9ee5d4a207d60b7c3d8d62795d8824d4';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const urlReviews = `${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n\n    function fetchReviews() {\n      fetch(urlReviews)\n        .then(response => response.json())\n        .then(data => {\n          setReviews(\n            data.results.map(({ author_details, content }) => ({\n              author: author_details.username,\n              content: content,\n            }))\n          );\n        })\n        .catch(error => console.log(error));\n    }\n\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsStyled>\n          {reviews.map(({ author, content }, index) => {\n            return (\n              <ReviewsItemStyled key={index}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </ReviewsItemStyled>\n            );\n          })}\n        </ReviewsStyled>\n      ) : (\n        <p>We don't have any reviews for this movie. You can be first</p>\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Reviews;"],"names":["ReviewsStyled","styled","ReviewsItemStyled","useState","reviews","setReviews","id","useParams","useEffect","urlReviews","fetch","then","response","json","data","results","map","author_details","content","author","username","catch","error","console","log","length","index"],"sourceRoot":""}